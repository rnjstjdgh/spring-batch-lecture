spring:
  profiles:
    active: local

---
spring:
  sql:
    init:
      mode: always
  profiles: local
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password:
  batch:
    job:
      enabled: false
    jdbc:
      initialize-schema: always # spring-batch-core 하위에 spring-batch 를 위한 메타 디비 스키마가 있음
                                # always option -> 항상 스키마 생성 스크립트를 실행한다는 설정(드랍 후 다시만드는것은 아님)
                                # never option -> 미리 생성된 스키마 기반으로 도는 설정
  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        show_sql: true
        format_sql: true

---
spring:
  sql:
    init:
      mode: always
  profiles: mysql
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/everyoneparty
    username: root
    password: Rnjs@1q2w3e
  batch:
    job:
      enabled: false
    jdbc:
      initialize-schema: always # spring-batch-core 하위에 spring-batch 를 위한 메타 디비 스키마가 있음
                                # always option -> 항상 스키마 생성 스크립트를 실행한다는 설정(드랍 후 다시만드는것은 아님)
                                # never option -> 미리 생성된 스키마 기반으로 도는 설정
  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        show_sql: true
        format_sql: true



